name: Tests

on:
  push:
    paths:
      - "**.py"
      - pyproject.toml
      - uv.lock
      - .github/workflows/uv-constraint.txt
      - .github/workflows/tests.yml
    branches:
      - main
      - "releases/**"
  pull_request:
    paths:
      - "**.py"
      - pyproject.toml
      - uv.lock
      - .github/workflows/uv-constraint.txt
      - .github/workflows/tests.yml
    branches:
      - main
      - "releases/**"
  workflow_dispatch:
  schedule:
    - cron: "0 15 * * *"  # Daily at 6pm Israel standard time

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12"]
    runs-on: ${{ matrix.os }}
    env:
      FORCE_COLOR: 1
    steps:
      - uses: actions/checkout@v4
      - name: Get uv version
        id: uv-version
        run: |
          content=$(cat .github/workflows/uv-constraint.txt)
          echo "version=${content#uv==}" >> "$GITHUB_OUTPUT"
      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: ${{ steps.uv-version.outputs.version }}
          enable-cache: true
          cache-dependency-glob: uv.lock
      - name: Install Python
        run: uv python install ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync
      - name: Run live tests (needing an internet connection)
        run: uv run --offline coverage run -m pytest -m live
      - name: Run offline tests
        if: github.event_name != 'schedule'
        run: uv run --offline coverage run -am pytest -m "not live" --disable-network --offline
      - name: Report coverage
        if: github.event_name != 'schedule'
        run: uv run --offline coverage report
      # The following step will be removed when all the project is covered with tests
      - name: Maintain 100% coverage on tested modules
        if: github.event_name != 'schedule'
        run: |
          uv run --offline coverage report --fail-under 100 \
          xil/_currencies.py \
          xil/_headers.py \
          xil/_df_normalizer.py \
          xil/onezero.py \
          xil/discount.py \
          xil/mercantile.py \
          xil/leumi.py \
#          xil/poalim.py \
